{"schemaVersion":{"minor":1,"major":0,"patch":2},"interfaceLanguages":{"swift":[{"path":"\/documentation","title":"Documentation","type":"module","children":[{"title":"SemVerMacros","path":"\/documentation\/semvermacros","children":[{"title":"Macros","type":"groupMarker"},{"title":"macro version(StaticString) -> Version","path":"\/documentation\/semvermacros\/version(_:)","type":"macro"}],"type":"module"},{"title":"SemVer","path":"\/documentation\/semver","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Structures"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/formattingoptions\/init(rawvalue:)","title":"init(rawValue: Version.FormattingOptions.RawValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/formattingoptions\/rawvalue-swift.property","title":"let rawValue: Version.FormattingOptions.RawValue","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/formattingoptions\/rawvalue-swift.typealias","title":"Version.FormattingOptions.RawValue","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/formattingoptions\/dropminorifzero","title":"static let dropMinorIfZero: Version.FormattingOptions","type":"property"},{"path":"\/documentation\/semver\/version\/formattingoptions\/droppatchifzero","title":"static let dropPatchIfZero: Version.FormattingOptions","type":"property"},{"path":"\/documentation\/semver\/version\/formattingoptions\/droptrailingzeros","title":"static var dropTrailingZeros: Version.FormattingOptions","type":"property"},{"path":"\/documentation\/semver\/version\/formattingoptions\/fullversion","title":"static var fullVersion: Version.FormattingOptions","type":"property"},{"path":"\/documentation\/semver\/version\/formattingoptions\/includemetadata","title":"static let includeMetadata: Version.FormattingOptions","type":"property"},{"path":"\/documentation\/semver\/version\/formattingoptions\/includeprerelease","title":"static let includePrerelease: Version.FormattingOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/formattingoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/semver\/version\/formattingoptions\/!=(_:_:)"}]},{"path":"\/documentation\/semver\/version\/formattingoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init()","path":"\/documentation\/semver\/version\/formattingoptions\/init()"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func contains(Self) -> Bool","path":"\/documentation\/semver\/version\/formattingoptions\/contains(_:)"},{"type":"method","title":"func formIntersection(Self)","path":"\/documentation\/semver\/version\/formattingoptions\/formintersection(_:)"},{"type":"method","title":"func formSymmetricDifference(Self)","path":"\/documentation\/semver\/version\/formattingoptions\/formsymmetricdifference(_:)"},{"type":"method","title":"func formUnion(Self)","path":"\/documentation\/semver\/version\/formattingoptions\/formunion(_:)"},{"type":"method","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","path":"\/documentation\/semver\/version\/formattingoptions\/insert(_:)"},{"type":"method","title":"func intersection(Self) -> Self","path":"\/documentation\/semver\/version\/formattingoptions\/intersection(_:)"},{"type":"method","title":"func remove(Self.Element) -> Self.Element?","path":"\/documentation\/semver\/version\/formattingoptions\/remove(_:)"},{"type":"method","title":"func symmetricDifference(Self) -> Self","path":"\/documentation\/semver\/version\/formattingoptions\/symmetricdifference(_:)"},{"type":"method","title":"func union(Self) -> Self","path":"\/documentation\/semver\/version\/formattingoptions\/union(_:)"},{"type":"method","title":"func update(with: Self.Element) -> Self.Element?","path":"\/documentation\/semver\/version\/formattingoptions\/update(with:)"}]},{"path":"\/documentation\/semver\/version\/formattingoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/semver\/version\/formattingoptions\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/semver\/version\/formattingoptions\/hash(into:)"}]},{"path":"\/documentation\/semver\/version\/formattingoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/semver\/version\/formattingoptions\/init(_:)","type":"init","title":"init<S>(S)"},{"path":"\/documentation\/semver\/version\/formattingoptions\/init(arrayliteral:)","type":"init","title":"init(arrayLiteral: Self.Element...)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/semver\/version\/formattingoptions\/isempty","type":"property","title":"var isEmpty: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/semver\/version\/formattingoptions\/isdisjoint(with:)","type":"method","title":"func isDisjoint(with: Self) -> Bool"},{"path":"\/documentation\/semver\/version\/formattingoptions\/isstrictsubset(of:)","type":"method","title":"func isStrictSubset(of: Self) -> Bool"},{"path":"\/documentation\/semver\/version\/formattingoptions\/isstrictsuperset(of:)","type":"method","title":"func isStrictSuperset(of: Self) -> Bool"},{"path":"\/documentation\/semver\/version\/formattingoptions\/issubset(of:)","type":"method","title":"func isSubset(of: Self) -> Bool"},{"path":"\/documentation\/semver\/version\/formattingoptions\/issuperset(of:)","type":"method","title":"func isSuperset(of: Self) -> Bool"},{"path":"\/documentation\/semver\/version\/formattingoptions\/subtract(_:)","type":"method","title":"func subtract(Self)"},{"path":"\/documentation\/semver\/version\/formattingoptions\/subtracting(_:)","type":"method","title":"func subtracting(Self) -> Self"}]}],"type":"struct","title":"Version.FormattingOptions","path":"\/documentation\/semver\/version\/formattingoptions"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func < (Version.PrereleaseIdentifier, Version.PrereleaseIdentifier) -> Bool","path":"\/documentation\/semver\/version\/prereleaseidentifier\/_(_:_:)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"title":"init(String)","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(_:)-11sof","type":"init"},{"title":"init(Int)","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(_:)-2qkfa","type":"init"},{"title":"init(unchecked: some StringProtocol)","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(unchecked:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/semver\/version\/prereleaseidentifier\/debugdescription","type":"property"},{"title":"var description: String","path":"\/documentation\/semver\/version\/prereleaseidentifier\/description","type":"property"},{"title":"var number: Int?","path":"\/documentation\/semver\/version\/prereleaseidentifier\/number","type":"property"},{"title":"var string: String","path":"\/documentation\/semver\/version\/prereleaseidentifier\/string","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func number(Int) -> Version.PrereleaseIdentifier","path":"\/documentation\/semver\/version\/prereleaseidentifier\/number(_:)","type":"method"},{"title":"static func string(some StringProtocol) -> Version.PrereleaseIdentifier","path":"\/documentation\/semver\/version\/prereleaseidentifier\/string(_:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Comparable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func ... (Self) -> PartialRangeFrom<Self>","path":"\/documentation\/semver\/version\/prereleaseidentifier\/'...(_:)-2ry5w","type":"op"},{"title":"static func ... (Self) -> PartialRangeThrough<Self>","path":"\/documentation\/semver\/version\/prereleaseidentifier\/'...(_:)-8zi3w","type":"op"},{"title":"static func ... (Self, Self) -> ClosedRange<Self>","path":"\/documentation\/semver\/version\/prereleaseidentifier\/'...(_:_:)","type":"op"},{"title":"static func ..< (Self) -> PartialRangeUpTo<Self>","path":"\/documentation\/semver\/version\/prereleaseidentifier\/'.._(_:)","type":"op"},{"title":"static func ..< (Self, Self) -> Range<Self>","path":"\/documentation\/semver\/version\/prereleaseidentifier\/'.._(_:_:)","type":"op"},{"title":"static func > (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/prereleaseidentifier\/_(_:_:)-6vxld","type":"op"},{"title":"static func >= (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/prereleaseidentifier\/_=(_:_:)-1aisw","type":"op"},{"title":"static func <= (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/prereleaseidentifier\/_=(_:_:)-41obm","type":"op"}],"path":"\/documentation\/semver\/version\/prereleaseidentifier\/comparable-implementations","type":"symbol"},{"title":"Decodable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(from:)","type":"init"}],"path":"\/documentation\/semver\/version\/prereleaseidentifier\/decodable-implementations","type":"symbol"},{"title":"Encodable Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/semver\/version\/prereleaseidentifier\/encodable-implementations","type":"symbol"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/prereleaseidentifier\/!=(_:_:)","type":"op"}],"path":"\/documentation\/semver\/version\/prereleaseidentifier\/equatable-implementations","type":"symbol"},{"title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)"}],"path":"\/documentation\/semver\/version\/prereleaseidentifier\/expressiblebyextendedgraphemeclusterliteral-implementations","type":"symbol"},{"title":"ExpressibleByIntegerLiteral Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(integerliteral:)","type":"init","title":"init(integerLiteral: Version.PrereleaseIdentifier.IntegerLiteralType)"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/integerliteraltype","type":"typealias","title":"Version.PrereleaseIdentifier.IntegerLiteralType"}],"path":"\/documentation\/semver\/version\/prereleaseidentifier\/expressiblebyintegerliteral-implementations","type":"symbol"},{"title":"ExpressibleByStringLiteral Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(stringliteral:)","title":"init(stringLiteral: Version.PrereleaseIdentifier.StringLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/stringliteraltype","title":"Version.PrereleaseIdentifier.StringLiteralType","type":"typealias"}],"path":"\/documentation\/semver\/version\/prereleaseidentifier\/expressiblebystringliteral-implementations","type":"symbol"}],"type":"struct","title":"Version.PrereleaseIdentifier","path":"\/documentation\/semver\/version\/prereleaseidentifier"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(String)","path":"\/documentation\/semver\/version\/init(_:)"},{"type":"init","title":"init(major: Int, minor: Int, patch: Int, prerelease: Array<Version.PrereleaseIdentifier>, metadata: Array<String>)","path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-3lz2i"},{"type":"init","title":"init(major: Int, minor: Int, patch: Int, prerelease: Version.PrereleaseIdentifier..., metadata: String...)","path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-4mc0k"},{"type":"init","title":"init(major: Int, minor: Int, patch: Int, prerelease: Array<Version.PrereleaseIdentifier>, metadata: String...)","path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-61p2c"},{"type":"init","title":"init(major: Int, minor: Int, patch: Int, prerelease: Version.PrereleaseIdentifier..., metadata: Array<String>)","path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-zkae"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var debugDescription: String","path":"\/documentation\/semver\/version\/debugdescription"},{"type":"property","title":"var description: String","path":"\/documentation\/semver\/version\/description"},{"type":"property","title":"var major: Int","path":"\/documentation\/semver\/version\/major"},{"type":"property","title":"var metadata: Array<String>","path":"\/documentation\/semver\/version\/metadata"},{"type":"property","title":"var minor: Int","path":"\/documentation\/semver\/version\/minor"},{"type":"property","title":"var patch: Int","path":"\/documentation\/semver\/version\/patch"},{"type":"property","title":"var prerelease: Array<Version.PrereleaseIdentifier>","path":"\/documentation\/semver\/version\/prerelease"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/semver\/version\/hash(into:)"},{"type":"method","title":"func increase(Version.NumericPart, keepingPrerelease: Bool, keepingMetadata: Bool)","path":"\/documentation\/semver\/version\/increase(_:keepingprerelease:keepingmetadata:)"},{"type":"method","title":"func isIdentical(to: Version, requireIdenticalMetadataOrdering: Bool) -> Bool","path":"\/documentation\/semver\/version\/isidentical(to:requireidenticalmetadataordering:)"},{"type":"method","title":"func next(Version.NumericPart, keepingPrerelease: Bool, keepingMetadata: Bool) -> Version","path":"\/documentation\/semver\/version\/next(_:keepingprerelease:keepingmetadata:)"},{"type":"method","title":"func versionString(formattedWith: Version.FormattingOptions) -> String","path":"\/documentation\/semver\/version\/versionstring(formattedwith:)"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case components(prereleaseAsString: Bool, metadataAsString: Bool)","path":"\/documentation\/semver\/version\/decodingstrategy\/components(prereleaseasstring:metadataasstring:)"},{"type":"case","title":"case custom((any Decoder) throws -> Version)","path":"\/documentation\/semver\/version\/decodingstrategy\/custom(_:)"},{"type":"case","title":"case string","path":"\/documentation\/semver\/version\/decodingstrategy\/string"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var components: Version.DecodingStrategy","path":"\/documentation\/semver\/version\/decodingstrategy\/components"}],"type":"enum","title":"Version.DecodingStrategy","path":"\/documentation\/semver\/version\/decodingstrategy"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case components(prereleaseAsString: Bool, metadataAsString: Bool)","type":"case","path":"\/documentation\/semver\/version\/encodingstrategy\/components(prereleaseasstring:metadataasstring:)"},{"title":"case custom((Version, any Encoder) throws -> ())","type":"case","path":"\/documentation\/semver\/version\/encodingstrategy\/custom(_:)"},{"title":"case string(Version.FormattingOptions)","type":"case","path":"\/documentation\/semver\/version\/encodingstrategy\/string(_:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var components: Version.EncodingStrategy","type":"property","path":"\/documentation\/semver\/version\/encodingstrategy\/components"},{"title":"static var string: Version.EncodingStrategy","type":"property","path":"\/documentation\/semver\/version\/encodingstrategy\/string"}],"type":"enum","title":"Version.EncodingStrategy","path":"\/documentation\/semver\/version\/encodingstrategy"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/semver\/version\/numericpart\/major","title":"case major"},{"type":"case","path":"\/documentation\/semver\/version\/numericpart\/minor","title":"case minor"},{"type":"case","path":"\/documentation\/semver\/version\/numericpart\/patch","title":"case patch"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/semver\/version\/numericpart\/description","title":"var description: String"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/semver\/version\/numericpart\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/semver\/version\/numericpart\/!=(_:_:)"}],"title":"Equatable Implementations"}],"type":"enum","title":"Version.NumericPart","path":"\/documentation\/semver\/version\/numericpart"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/semver\/version\/'...(_:)-3jne3","type":"op","title":"static func ... (Self) -> PartialRangeThrough<Self>"},{"path":"\/documentation\/semver\/version\/'...(_:)-7zfgp","type":"op","title":"static func ... (Self) -> PartialRangeFrom<Self>"},{"path":"\/documentation\/semver\/version\/'...(_:_:)","type":"op","title":"static func ... (Self, Self) -> ClosedRange<Self>"},{"path":"\/documentation\/semver\/version\/'.._(_:)","type":"op","title":"static func ..< (Self) -> PartialRangeUpTo<Self>"},{"path":"\/documentation\/semver\/version\/'.._(_:_:)","type":"op","title":"static func ..< (Self, Self) -> Range<Self>"},{"path":"\/documentation\/semver\/version\/_(_:_:)","type":"op","title":"static func < (Version, Version) -> Bool"},{"path":"\/documentation\/semver\/version\/_(_:_:)-53xj6","type":"op","title":"static func > (Self, Self) -> Bool"},{"path":"\/documentation\/semver\/version\/_=(_:_:)-6z215","type":"op","title":"static func <= (Self, Self) -> Bool"},{"path":"\/documentation\/semver\/version\/_=(_:_:)-7km7s","type":"op","title":"static func >= (Self, Self) -> Bool"}],"type":"symbol","title":"Comparable Implementations","path":"\/documentation\/semver\/version\/comparable-implementations"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/semver\/version\/init(from:)"}],"type":"symbol","title":"Decodable Implementations","path":"\/documentation\/semver\/version\/decodable-implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"type":"symbol","title":"Encodable Implementations","path":"\/documentation\/semver\/version\/encodable-implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/!=(_:_:)","type":"op"},{"title":"static func == (Version, Version) -> Bool","path":"\/documentation\/semver\/version\/==(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/semver\/version\/equatable-implementations"}],"title":"Version","path":"\/documentation\/semver\/version","type":"struct"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"title":"CharacterSet","type":"extension","path":"\/documentation\/semver\/foundation\/characterset","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static let versionSuffixAllowed: CharacterSet","path":"\/documentation\/semver\/foundation\/characterset\/versionsuffixallowed","type":"property"}]}],"title":"Foundation","path":"\/documentation\/semver\/foundation","type":"extension"},{"children":[{"type":"groupMarker","title":"Extended Classes"},{"type":"extension","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var semverVersionDecodingStrategy: Version.DecodingStrategy","path":"\/documentation\/semver\/foundationessentials\/jsondecoder\/semverversiondecodingstrategy"}],"path":"\/documentation\/semver\/foundationessentials\/jsondecoder","title":"JSONDecoder"},{"type":"extension","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var semverVersionEncodingStrategy: Version.EncodingStrategy","path":"\/documentation\/semver\/foundationessentials\/jsonencoder\/semverversionencodingstrategy"}],"path":"\/documentation\/semver\/foundationessentials\/jsonencoder","title":"JSONEncoder"},{"type":"extension","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var semverVersionDecodingStrategy: Version.DecodingStrategy","type":"property","path":"\/documentation\/semver\/foundationessentials\/propertylistdecoder\/semverversiondecodingstrategy"}],"path":"\/documentation\/semver\/foundationessentials\/propertylistdecoder","title":"PropertyListDecoder"},{"type":"extension","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/semver\/foundationessentials\/propertylistencoder\/semverversionencodingstrategy","title":"var semverVersionEncodingStrategy: Version.EncodingStrategy","type":"property"}],"path":"\/documentation\/semver\/foundationessentials\/propertylistencoder","title":"PropertyListEncoder"}],"title":"FoundationEssentials","path":"\/documentation\/semver\/foundationessentials","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"path":"\/documentation\/semver\/swift\/codinguserinfokey","children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/semver\/swift\/codinguserinfokey\/versiondecodingstrategy","title":"static let versionDecodingStrategy: CodingUserInfoKey","type":"property"},{"path":"\/documentation\/semver\/swift\/codinguserinfokey\/versionencodingstrategy","title":"static let versionEncodingStrategy: CodingUserInfoKey","type":"property"}],"title":"CodingUserInfoKey","type":"extension"}],"title":"Swift","path":"\/documentation\/semver\/swift","type":"extension"}],"type":"module"}]}]},"includedArchiveIdentifiers":["SemVerMacros","SemVer"]}