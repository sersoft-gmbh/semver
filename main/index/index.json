{"includedArchiveIdentifiers":["SemVer","SemVerMacros"],"interfaceLanguages":{"swift":[{"title":"Documentation","path":"\/documentation","type":"module","children":[{"title":"SemVer","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","path":"\/documentation\/semver\/version","children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/formattingoptions","title":"Version.FormattingOptions","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/semver\/version\/formattingoptions\/init(rawvalue:)","title":"init(rawValue: Version.FormattingOptions.RawValue)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/semver\/version\/formattingoptions\/rawvalue-swift.property","title":"let rawValue: Version.FormattingOptions.RawValue","type":"property"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/semver\/version\/formattingoptions\/rawvalue-swift.typealias","title":"Version.FormattingOptions.RawValue","type":"typealias"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/semver\/version\/formattingoptions\/dropminorifzero","title":"static let dropMinorIfZero: Version.FormattingOptions","type":"property"},{"path":"\/documentation\/semver\/version\/formattingoptions\/droppatchifzero","title":"static let dropPatchIfZero: Version.FormattingOptions","type":"property"},{"path":"\/documentation\/semver\/version\/formattingoptions\/droptrailingzeros","title":"static var dropTrailingZeros: Version.FormattingOptions","type":"property"},{"path":"\/documentation\/semver\/version\/formattingoptions\/fullversion","title":"static var fullVersion: Version.FormattingOptions","type":"property"},{"path":"\/documentation\/semver\/version\/formattingoptions\/includemetadata","title":"static let includeMetadata: Version.FormattingOptions","type":"property"},{"path":"\/documentation\/semver\/version\/formattingoptions\/includeprerelease","title":"static let includePrerelease: Version.FormattingOptions","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/semver\/version\/formattingoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/formattingoptions\/!=(_:_:)"}]},{"path":"\/documentation\/semver\/version\/formattingoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/semver\/version\/formattingoptions\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/semver\/version\/formattingoptions\/contains(_:)","type":"method","title":"func contains(Self) -> Bool"},{"path":"\/documentation\/semver\/version\/formattingoptions\/formintersection(_:)","type":"method","title":"func formIntersection(Self)"},{"path":"\/documentation\/semver\/version\/formattingoptions\/formsymmetricdifference(_:)","type":"method","title":"func formSymmetricDifference(Self)"},{"path":"\/documentation\/semver\/version\/formattingoptions\/formunion(_:)","type":"method","title":"func formUnion(Self)"},{"path":"\/documentation\/semver\/version\/formattingoptions\/insert(_:)","type":"method","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)"},{"path":"\/documentation\/semver\/version\/formattingoptions\/intersection(_:)","type":"method","title":"func intersection(Self) -> Self"},{"path":"\/documentation\/semver\/version\/formattingoptions\/remove(_:)","type":"method","title":"func remove(Self.Element) -> Self.Element?"},{"path":"\/documentation\/semver\/version\/formattingoptions\/symmetricdifference(_:)","type":"method","title":"func symmetricDifference(Self) -> Self"},{"path":"\/documentation\/semver\/version\/formattingoptions\/union(_:)","type":"method","title":"func union(Self) -> Self"},{"path":"\/documentation\/semver\/version\/formattingoptions\/update(with:)","type":"method","title":"func update(with: Self.Element) -> Self.Element?"}]},{"path":"\/documentation\/semver\/version\/formattingoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/semver\/version\/formattingoptions\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/semver\/version\/formattingoptions\/hash(into:)"}]},{"path":"\/documentation\/semver\/version\/formattingoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init<S>(S)","path":"\/documentation\/semver\/version\/formattingoptions\/init(_:)","type":"init"},{"title":"init(arrayLiteral: Self.Element...)","path":"\/documentation\/semver\/version\/formattingoptions\/init(arrayliteral:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var isEmpty: Bool","path":"\/documentation\/semver\/version\/formattingoptions\/isempty","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func isDisjoint(with: Self) -> Bool","path":"\/documentation\/semver\/version\/formattingoptions\/isdisjoint(with:)","type":"method"},{"title":"func isStrictSubset(of: Self) -> Bool","path":"\/documentation\/semver\/version\/formattingoptions\/isstrictsubset(of:)","type":"method"},{"title":"func isStrictSuperset(of: Self) -> Bool","path":"\/documentation\/semver\/version\/formattingoptions\/isstrictsuperset(of:)","type":"method"},{"title":"func isSubset(of: Self) -> Bool","path":"\/documentation\/semver\/version\/formattingoptions\/issubset(of:)","type":"method"},{"title":"func isSuperset(of: Self) -> Bool","path":"\/documentation\/semver\/version\/formattingoptions\/issuperset(of:)","type":"method"},{"title":"func subtract(Self)","path":"\/documentation\/semver\/version\/formattingoptions\/subtract(_:)","type":"method"},{"title":"func subtracting(Self) -> Self","path":"\/documentation\/semver\/version\/formattingoptions\/subtracting(_:)","type":"method"}]}]},{"path":"\/documentation\/semver\/version\/prereleaseidentifier","title":"Version.PrereleaseIdentifier","type":"struct","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/_(_:_:)","title":"static func < (Version.PrereleaseIdentifier, Version.PrereleaseIdentifier) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(_:)-11sof","title":"init(String)","type":"init"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(_:)-2qkfa","title":"init(Int)","type":"init"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(unchecked:)","title":"init(unchecked: some StringProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/number","title":"var number: Int?","type":"property"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/string","title":"var string: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/number(_:)","title":"static func number(Int) -> Version.PrereleaseIdentifier","type":"method"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/string(_:)","title":"static func string(some StringProtocol) -> Version.PrereleaseIdentifier","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/comparable-implementations","title":"Comparable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/'...(_:)-2ry5w","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/'...(_:)-8zi3w","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/_(_:_:)-6vxld","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/_=(_:_:)-1aisw","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/_=(_:_:)-41obm","title":"static func <= (Self, Self) -> Bool","type":"op"}]},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/decodable-implementations","title":"Decodable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(from:)","type":"init","title":"init(from: any Decoder) throws"}]},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/encodable-implementations","title":"Encodable Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/semver\/version\/prereleaseidentifier\/encode(to:)","type":"method"}]},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/semver\/version\/prereleaseidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(unicodescalarliteral:)","type":"init"}]},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(integerliteral:)","title":"init(integerLiteral: Version.PrereleaseIdentifier.IntegerLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/integerliteraltype","title":"Version.PrereleaseIdentifier.IntegerLiteralType","type":"typealias"}]},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(stringliteral:)","title":"init(stringLiteral: Version.PrereleaseIdentifier.StringLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/stringliteraltype","title":"Version.PrereleaseIdentifier.StringLiteralType","type":"typealias"}]}]},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/init(_:)","title":"init?(String)","type":"init"},{"path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-3lz2i","title":"init(major: Int, minor: Int, patch: Int, prerelease: Array<Version.PrereleaseIdentifier>, metadata: Array<String>)","type":"init"},{"path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-4mc0k","title":"init(major: Int, minor: Int, patch: Int, prerelease: Version.PrereleaseIdentifier..., metadata: String...)","type":"init"},{"path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-61p2c","title":"init(major: Int, minor: Int, patch: Int, prerelease: Array<Version.PrereleaseIdentifier>, metadata: String...)","type":"init"},{"path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-zkae","title":"init(major: Int, minor: Int, patch: Int, prerelease: Version.PrereleaseIdentifier..., metadata: Array<String>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/semver\/version\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/semver\/version\/major","title":"var major: Int","type":"property"},{"path":"\/documentation\/semver\/version\/metadata","title":"var metadata: Array<String>","type":"property"},{"path":"\/documentation\/semver\/version\/minor","title":"var minor: Int","type":"property"},{"path":"\/documentation\/semver\/version\/patch","title":"var patch: Int","type":"property"},{"path":"\/documentation\/semver\/version\/prerelease","title":"var prerelease: Array<Version.PrereleaseIdentifier>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/semver\/version\/increase(_:keepingprerelease:keepingmetadata:)","title":"func increase(Version.NumericPart, keepingPrerelease: Bool, keepingMetadata: Bool)","type":"method"},{"path":"\/documentation\/semver\/version\/isidentical(to:requireidenticalmetadataordering:)","title":"func isIdentical(to: Version, requireIdenticalMetadataOrdering: Bool) -> Bool","type":"method"},{"path":"\/documentation\/semver\/version\/next(_:keepingprerelease:keepingmetadata:)","title":"func next(Version.NumericPart, keepingPrerelease: Bool, keepingMetadata: Bool) -> Version","type":"method"},{"path":"\/documentation\/semver\/version\/versionstring(formattedwith:)","title":"func versionString(formattedWith: Version.FormattingOptions) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/decodingstrategy","title":"Version.DecodingStrategy","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/decodingstrategy\/components(prereleaseasstring:metadataasstring:)","title":"case components(prereleaseAsString: Bool, metadataAsString: Bool)","type":"case"},{"path":"\/documentation\/semver\/version\/decodingstrategy\/custom(_:)","title":"case custom((any Decoder) throws -> Version)","type":"case"},{"path":"\/documentation\/semver\/version\/decodingstrategy\/string","title":"case string","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/decodingstrategy\/components","title":"static var components: Version.DecodingStrategy","type":"property"}]},{"path":"\/documentation\/semver\/version\/encodingstrategy","title":"Version.EncodingStrategy","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case components(prereleaseAsString: Bool, metadataAsString: Bool)","path":"\/documentation\/semver\/version\/encodingstrategy\/components(prereleaseasstring:metadataasstring:)","type":"case"},{"title":"case custom((Version, any Encoder) throws -> ())","path":"\/documentation\/semver\/version\/encodingstrategy\/custom(_:)","type":"case"},{"title":"case string(Version.FormattingOptions)","path":"\/documentation\/semver\/version\/encodingstrategy\/string(_:)","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var components: Version.EncodingStrategy","path":"\/documentation\/semver\/version\/encodingstrategy\/components","type":"property"},{"title":"static var string: Version.EncodingStrategy","path":"\/documentation\/semver\/version\/encodingstrategy\/string","type":"property"}]},{"path":"\/documentation\/semver\/version\/numericpart","title":"Version.NumericPart","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case major","path":"\/documentation\/semver\/version\/numericpart\/major","type":"case"},{"title":"case minor","path":"\/documentation\/semver\/version\/numericpart\/minor","type":"case"},{"title":"case patch","path":"\/documentation\/semver\/version\/numericpart\/patch","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/semver\/version\/numericpart\/description","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/semver\/version\/numericpart\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/semver\/version\/numericpart\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/comparable-implementations","title":"Comparable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/semver\/version\/'...(_:)-3jne3","type":"op","title":"static func ... (Self) -> PartialRangeThrough<Self>"},{"path":"\/documentation\/semver\/version\/'...(_:)-7zfgp","type":"op","title":"static func ... (Self) -> PartialRangeFrom<Self>"},{"path":"\/documentation\/semver\/version\/'...(_:_:)","type":"op","title":"static func ... (Self, Self) -> ClosedRange<Self>"},{"path":"\/documentation\/semver\/version\/'.._(_:)","type":"op","title":"static func ..< (Self) -> PartialRangeUpTo<Self>"},{"path":"\/documentation\/semver\/version\/'.._(_:_:)","type":"op","title":"static func ..< (Self, Self) -> Range<Self>"},{"path":"\/documentation\/semver\/version\/_(_:_:)","type":"op","title":"static func < (Version, Version) -> Bool"},{"path":"\/documentation\/semver\/version\/_(_:_:)-53xj6","type":"op","title":"static func > (Self, Self) -> Bool"},{"path":"\/documentation\/semver\/version\/_=(_:_:)-6z215","type":"op","title":"static func <= (Self, Self) -> Bool"},{"path":"\/documentation\/semver\/version\/_=(_:_:)-7km7s","type":"op","title":"static func >= (Self, Self) -> Bool"}]},{"path":"\/documentation\/semver\/version\/decodable-implementations","title":"Decodable Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/semver\/version\/init(from:)"}]},{"path":"\/documentation\/semver\/version\/encodable-implementations","title":"Encodable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/semver\/version\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"}]},{"path":"\/documentation\/semver\/version\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/!=(_:_:)","type":"op"},{"title":"static func == (Version, Version) -> Bool","path":"\/documentation\/semver\/version\/==(_:_:)","type":"op"}]}],"title":"Version"},{"type":"groupMarker","title":"Extended Modules"},{"type":"extension","path":"\/documentation\/semver\/foundation","children":[{"title":"Extended Structures","type":"groupMarker"},{"title":"CharacterSet","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/semver\/foundation\/characterset\/versionsuffixallowed","title":"static let versionSuffixAllowed: CharacterSet"}],"path":"\/documentation\/semver\/foundation\/characterset","type":"extension"}],"title":"Foundation"},{"type":"extension","path":"\/documentation\/semver\/foundationessentials","children":[{"title":"Extended Classes","type":"groupMarker"},{"title":"JSONDecoder","type":"extension","path":"\/documentation\/semver\/foundationessentials\/jsondecoder","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var semverVersionDecodingStrategy: Version.DecodingStrategy","type":"property","path":"\/documentation\/semver\/foundationessentials\/jsondecoder\/semverversiondecodingstrategy"}]},{"title":"JSONEncoder","type":"extension","path":"\/documentation\/semver\/foundationessentials\/jsonencoder","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/semver\/foundationessentials\/jsonencoder\/semverversionencodingstrategy","title":"var semverVersionEncodingStrategy: Version.EncodingStrategy","type":"property"}]},{"title":"PropertyListDecoder","type":"extension","path":"\/documentation\/semver\/foundationessentials\/propertylistdecoder","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/semver\/foundationessentials\/propertylistdecoder\/semverversiondecodingstrategy","title":"var semverVersionDecodingStrategy: Version.DecodingStrategy","type":"property"}]},{"title":"PropertyListEncoder","type":"extension","path":"\/documentation\/semver\/foundationessentials\/propertylistencoder","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var semverVersionEncodingStrategy: Version.EncodingStrategy","type":"property","path":"\/documentation\/semver\/foundationessentials\/propertylistencoder\/semverversionencodingstrategy"}]}],"title":"FoundationEssentials"},{"type":"extension","path":"\/documentation\/semver\/swift","children":[{"type":"groupMarker","title":"Extended Structures"},{"path":"\/documentation\/semver\/swift\/codinguserinfokey","type":"extension","title":"CodingUserInfoKey","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static let versionDecodingStrategy: CodingUserInfoKey","path":"\/documentation\/semver\/swift\/codinguserinfokey\/versiondecodingstrategy","type":"property"},{"title":"static let versionEncodingStrategy: CodingUserInfoKey","path":"\/documentation\/semver\/swift\/codinguserinfokey\/versionencodingstrategy","type":"property"}]}],"title":"Swift"}],"type":"module","path":"\/documentation\/semver"},{"title":"SemVerMacros","children":[{"title":"Macros","type":"groupMarker"},{"title":"macro version(StaticString) -> Version","path":"\/documentation\/semvermacros\/version(_:)","type":"macro"}],"type":"module","path":"\/documentation\/semvermacros"}]}]},"schemaVersion":{"minor":1,"patch":2,"major":0}}