{"interfaceLanguages":{"swift":[{"type":"module","title":"Documentation","path":"\/documentation","children":[{"children":[{"title":"Structures","type":"groupMarker"},{"title":"Version","path":"\/documentation\/semver\/version","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/semver\/version\/formattingoptions","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(rawValue: Version.FormattingOptions.RawValue)","path":"\/documentation\/semver\/version\/formattingoptions\/init(rawvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let rawValue: Version.FormattingOptions.RawValue","path":"\/documentation\/semver\/version\/formattingoptions\/rawvalue-swift.property","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"title":"Version.FormattingOptions.RawValue","path":"\/documentation\/semver\/version\/formattingoptions\/rawvalue-swift.typealias","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let dropMinorIfZero: Version.FormattingOptions","path":"\/documentation\/semver\/version\/formattingoptions\/dropminorifzero","type":"property"},{"title":"static let dropPatchIfZero: Version.FormattingOptions","path":"\/documentation\/semver\/version\/formattingoptions\/droppatchifzero","type":"property"},{"title":"static var dropTrailingZeros: Version.FormattingOptions","path":"\/documentation\/semver\/version\/formattingoptions\/droptrailingzeros","type":"property"},{"title":"static var fullVersion: Version.FormattingOptions","path":"\/documentation\/semver\/version\/formattingoptions\/fullversion","type":"property"},{"title":"static let includeMetadata: Version.FormattingOptions","path":"\/documentation\/semver\/version\/formattingoptions\/includemetadata","type":"property"},{"title":"static let includePrerelease: Version.FormattingOptions","path":"\/documentation\/semver\/version\/formattingoptions\/includeprerelease","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/semver\/version\/formattingoptions\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/formattingoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"OptionSet Implementations","path":"\/documentation\/semver\/version\/formattingoptions\/optionset-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/semver\/version\/formattingoptions\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/semver\/version\/formattingoptions\/contains(_:)","title":"func contains(Self) -> Bool"},{"type":"method","path":"\/documentation\/semver\/version\/formattingoptions\/formintersection(_:)","title":"func formIntersection(Self)"},{"type":"method","path":"\/documentation\/semver\/version\/formattingoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)"},{"type":"method","path":"\/documentation\/semver\/version\/formattingoptions\/formunion(_:)","title":"func formUnion(Self)"},{"type":"method","path":"\/documentation\/semver\/version\/formattingoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)"},{"type":"method","path":"\/documentation\/semver\/version\/formattingoptions\/intersection(_:)","title":"func intersection(Self) -> Self"},{"type":"method","path":"\/documentation\/semver\/version\/formattingoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?"},{"type":"method","path":"\/documentation\/semver\/version\/formattingoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self"},{"type":"method","path":"\/documentation\/semver\/version\/formattingoptions\/union(_:)","title":"func union(Self) -> Self"},{"type":"method","path":"\/documentation\/semver\/version\/formattingoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/semver\/version\/formattingoptions\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/formattingoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/formattingoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]},{"title":"SetAlgebra Implementations","path":"\/documentation\/semver\/version\/formattingoptions\/setalgebra-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/formattingoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/semver\/version\/formattingoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/formattingoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/formattingoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/semver\/version\/formattingoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/semver\/version\/formattingoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/semver\/version\/formattingoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/semver\/version\/formattingoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/semver\/version\/formattingoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/semver\/version\/formattingoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}]}],"title":"Version.FormattingOptions"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier","type":"struct","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func < (Version.PrereleaseIdentifier, Version.PrereleaseIdentifier) -> Bool","type":"op","path":"\/documentation\/semver\/version\/prereleaseidentifier\/_(_:_:)"},{"title":"Initializers","type":"groupMarker"},{"title":"init(String)","type":"init","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(_:)-11sof"},{"title":"init(Int)","type":"init","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(_:)-2qkfa"},{"title":"init(unchecked: some StringProtocol)","type":"init","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(unchecked:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/semver\/version\/prereleaseidentifier\/debugdescription"},{"title":"var description: String","type":"property","path":"\/documentation\/semver\/version\/prereleaseidentifier\/description"},{"title":"var number: Int?","type":"property","path":"\/documentation\/semver\/version\/prereleaseidentifier\/number"},{"title":"var string: String","type":"property","path":"\/documentation\/semver\/version\/prereleaseidentifier\/string"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func number(Int) -> Version.PrereleaseIdentifier","type":"method","path":"\/documentation\/semver\/version\/prereleaseidentifier\/number(_:)"},{"title":"static func string(some StringProtocol) -> Version.PrereleaseIdentifier","type":"method","path":"\/documentation\/semver\/version\/prereleaseidentifier\/string(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Comparable Implementations","type":"symbol","path":"\/documentation\/semver\/version\/prereleaseidentifier\/comparable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/'...(_:)-2ry5w","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/'...(_:)-8zi3w","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/_(_:_:)-6vxld","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/_=(_:_:)-1aisw","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/_=(_:_:)-41obm","title":"static func <= (Self, Self) -> Bool","type":"op"}]},{"title":"Decodable Implementations","type":"symbol","path":"\/documentation\/semver\/version\/prereleaseidentifier\/decodable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(from:)","type":"init","title":"init(from: any Decoder) throws"}]},{"title":"Encodable Implementations","type":"symbol","path":"\/documentation\/semver\/version\/prereleaseidentifier\/encodable-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/semver\/version\/prereleaseidentifier\/encode(to:)"}]},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/semver\/version\/prereleaseidentifier\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol","path":"\/documentation\/semver\/version\/prereleaseidentifier\/expressiblebyextendedgraphemeclusterliteral-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(unicodescalarliteral:)"}]},{"title":"ExpressibleByIntegerLiteral Implementations","type":"symbol","path":"\/documentation\/semver\/version\/prereleaseidentifier\/expressiblebyintegerliteral-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(integerLiteral: Version.PrereleaseIdentifier.IntegerLiteralType)","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(integerliteral:)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"title":"Version.PrereleaseIdentifier.IntegerLiteralType","path":"\/documentation\/semver\/version\/prereleaseidentifier\/integerliteraltype","type":"typealias"}]},{"title":"ExpressibleByStringLiteral Implementations","type":"symbol","path":"\/documentation\/semver\/version\/prereleaseidentifier\/expressiblebystringliteral-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(extendedgraphemeclusterliteral:)"},{"type":"init","title":"init(stringLiteral: Version.PrereleaseIdentifier.StringLiteralType)","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(stringliteral:)"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"Version.PrereleaseIdentifier.StringLiteralType","path":"\/documentation\/semver\/version\/prereleaseidentifier\/stringliteraltype"}]}],"title":"Version.PrereleaseIdentifier"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/semver\/version\/init(_:)","type":"init","title":"init?(String)"},{"path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-3lz2i","type":"init","title":"init(major: Int, minor: Int, patch: Int, prerelease: Array<Version.PrereleaseIdentifier>, metadata: Array<String>)"},{"path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-4mc0k","type":"init","title":"init(major: Int, minor: Int, patch: Int, prerelease: Version.PrereleaseIdentifier..., metadata: String...)"},{"path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-61p2c","type":"init","title":"init(major: Int, minor: Int, patch: Int, prerelease: Array<Version.PrereleaseIdentifier>, metadata: String...)"},{"path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-zkae","type":"init","title":"init(major: Int, minor: Int, patch: Int, prerelease: Version.PrereleaseIdentifier..., metadata: Array<String>)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/semver\/version\/debugdescription","type":"property","title":"var debugDescription: String"},{"path":"\/documentation\/semver\/version\/description","type":"property","title":"var description: String"},{"path":"\/documentation\/semver\/version\/major","type":"property","title":"var major: Int"},{"path":"\/documentation\/semver\/version\/metadata","type":"property","title":"var metadata: Array<String>"},{"path":"\/documentation\/semver\/version\/minor","type":"property","title":"var minor: Int"},{"path":"\/documentation\/semver\/version\/patch","type":"property","title":"var patch: Int"},{"path":"\/documentation\/semver\/version\/prerelease","type":"property","title":"var prerelease: Array<Version.PrereleaseIdentifier>"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/semver\/version\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"},{"path":"\/documentation\/semver\/version\/increase(_:keepingprerelease:keepingmetadata:)","type":"method","title":"func increase(Version.NumericPart, keepingPrerelease: Bool, keepingMetadata: Bool)"},{"path":"\/documentation\/semver\/version\/isidentical(to:requireidenticalmetadataordering:)","type":"method","title":"func isIdentical(to: Version, requireIdenticalMetadataOrdering: Bool) -> Bool"},{"path":"\/documentation\/semver\/version\/next(_:keepingprerelease:keepingmetadata:)","type":"method","title":"func next(Version.NumericPart, keepingPrerelease: Bool, keepingMetadata: Bool) -> Version"},{"path":"\/documentation\/semver\/version\/versionstring(formattedwith:)","type":"method","title":"func versionString(formattedWith: Version.FormattingOptions) -> String"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/semver\/version\/decodingstrategy","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/semver\/version\/decodingstrategy\/components(prereleaseasstring:metadataasstring:)","title":"case components(prereleaseAsString: Bool, metadataAsString: Bool)"},{"type":"case","path":"\/documentation\/semver\/version\/decodingstrategy\/custom(_:)","title":"case custom((any Decoder) throws -> Version)"},{"type":"case","path":"\/documentation\/semver\/version\/decodingstrategy\/string","title":"case string"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/semver\/version\/decodingstrategy\/components","title":"static var components: Version.DecodingStrategy"}],"title":"Version.DecodingStrategy"},{"path":"\/documentation\/semver\/version\/encodingstrategy","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/semver\/version\/encodingstrategy\/components(prereleaseasstring:metadataasstring:)","type":"case","title":"case components(prereleaseAsString: Bool, metadataAsString: Bool)"},{"path":"\/documentation\/semver\/version\/encodingstrategy\/custom(_:)","type":"case","title":"case custom((Version, any Encoder) throws -> ())"},{"path":"\/documentation\/semver\/version\/encodingstrategy\/string(_:)","type":"case","title":"case string(Version.FormattingOptions)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/semver\/version\/encodingstrategy\/components","type":"property","title":"static var components: Version.EncodingStrategy"},{"path":"\/documentation\/semver\/version\/encodingstrategy\/string","type":"property","title":"static var string: Version.EncodingStrategy"}],"title":"Version.EncodingStrategy"},{"path":"\/documentation\/semver\/version\/numericpart","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/semver\/version\/numericpart\/major","title":"case major"},{"type":"case","path":"\/documentation\/semver\/version\/numericpart\/minor","title":"case minor"},{"type":"case","path":"\/documentation\/semver\/version\/numericpart\/patch","title":"case patch"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/semver\/version\/numericpart\/description","title":"var description: String"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/numericpart\/!=(_:_:)","type":"op"}],"path":"\/documentation\/semver\/version\/numericpart\/equatable-implementations","title":"Equatable Implementations"}],"title":"Version.NumericPart"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/semver\/version\/comparable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func ... (Self) -> PartialRangeThrough<Self>","path":"\/documentation\/semver\/version\/'...(_:)-3jne3"},{"type":"op","title":"static func ... (Self) -> PartialRangeFrom<Self>","path":"\/documentation\/semver\/version\/'...(_:)-7zfgp"},{"type":"op","title":"static func ... (Self, Self) -> ClosedRange<Self>","path":"\/documentation\/semver\/version\/'...(_:_:)"},{"type":"op","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","path":"\/documentation\/semver\/version\/'.._(_:)"},{"type":"op","title":"static func ..< (Self, Self) -> Range<Self>","path":"\/documentation\/semver\/version\/'.._(_:_:)"},{"type":"op","title":"static func < (Version, Version) -> Bool","path":"\/documentation\/semver\/version\/_(_:_:)"},{"type":"op","title":"static func > (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/_(_:_:)-53xj6"},{"type":"op","title":"static func <= (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/_=(_:_:)-6z215"},{"type":"op","title":"static func >= (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/_=(_:_:)-7km7s"}],"title":"Comparable Implementations"},{"path":"\/documentation\/semver\/version\/decodable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"title":"Decodable Implementations"},{"path":"\/documentation\/semver\/version\/encodable-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/semver\/version\/encode(to:)","type":"method"}],"title":"Encodable Implementations"},{"path":"\/documentation\/semver\/version\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/!=(_:_:)","type":"op"},{"title":"static func == (Version, Version) -> Bool","path":"\/documentation\/semver\/version\/==(_:_:)","type":"op"}],"title":"Equatable Implementations"}],"type":"struct"},{"title":"Extended Modules","type":"groupMarker"},{"title":"Foundation","path":"\/documentation\/semver\/foundation","children":[{"title":"Extended Structures","type":"groupMarker"},{"title":"CharacterSet","path":"\/documentation\/semver\/foundation\/characterset","type":"extension","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/semver\/foundation\/characterset\/versionsuffixallowed","type":"property","title":"static let versionSuffixAllowed: CharacterSet"}]}],"type":"extension"},{"title":"FoundationEssentials","path":"\/documentation\/semver\/foundationessentials","children":[{"title":"Extended Classes","type":"groupMarker"},{"path":"\/documentation\/semver\/foundationessentials\/jsondecoder","title":"JSONDecoder","type":"extension","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var semverVersionDecodingStrategy: Version.DecodingStrategy","path":"\/documentation\/semver\/foundationessentials\/jsondecoder\/semverversiondecodingstrategy"}]},{"path":"\/documentation\/semver\/foundationessentials\/jsonencoder","title":"JSONEncoder","type":"extension","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/semver\/foundationessentials\/jsonencoder\/semverversionencodingstrategy","title":"var semverVersionEncodingStrategy: Version.EncodingStrategy"}]},{"path":"\/documentation\/semver\/foundationessentials\/propertylistdecoder","title":"PropertyListDecoder","type":"extension","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var semverVersionDecodingStrategy: Version.DecodingStrategy","path":"\/documentation\/semver\/foundationessentials\/propertylistdecoder\/semverversiondecodingstrategy"}]},{"path":"\/documentation\/semver\/foundationessentials\/propertylistencoder","title":"PropertyListEncoder","type":"extension","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var semverVersionEncodingStrategy: Version.EncodingStrategy","path":"\/documentation\/semver\/foundationessentials\/propertylistencoder\/semverversionencodingstrategy"}]}],"type":"extension"},{"title":"Swift","path":"\/documentation\/semver\/swift","children":[{"type":"groupMarker","title":"Extended Structures"},{"type":"extension","path":"\/documentation\/semver\/swift\/codinguserinfokey","title":"CodingUserInfoKey","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/semver\/swift\/codinguserinfokey\/versiondecodingstrategy","title":"static let versionDecodingStrategy: CodingUserInfoKey"},{"type":"property","path":"\/documentation\/semver\/swift\/codinguserinfokey\/versionencodingstrategy","title":"static let versionEncodingStrategy: CodingUserInfoKey"}]}],"type":"extension"}],"path":"\/documentation\/semver","type":"module","title":"SemVer"},{"children":[{"type":"groupMarker","title":"Macros"},{"type":"macro","path":"\/documentation\/semvermacros\/version(_:)","title":"macro version(StaticString) -> Version"}],"path":"\/documentation\/semvermacros","type":"module","title":"SemVerMacros"}]}]},"includedArchiveIdentifiers":["SemVer","SemVerMacros"],"schemaVersion":{"major":0,"patch":2,"minor":1}}