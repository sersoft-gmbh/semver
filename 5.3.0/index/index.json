{"interfaceLanguages":{"swift":[{"type":"module","path":"\/documentation","title":"Documentation","children":[{"type":"module","path":"\/documentation\/semvermacros","children":[{"title":"Macros","type":"groupMarker"},{"title":"macro version(StaticString) -> Version","type":"macro","path":"\/documentation\/semvermacros\/version(_:)"}],"title":"SemVerMacros"},{"type":"module","path":"\/documentation\/semver","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/semver\/version","title":"Version","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"title":"Version.FormattingOptions","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(rawValue: Version.FormattingOptions.RawValue)","path":"\/documentation\/semver\/version\/formattingoptions\/init(rawvalue:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let rawValue: Version.FormattingOptions.RawValue","path":"\/documentation\/semver\/version\/formattingoptions\/rawvalue-swift.property"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"Version.FormattingOptions.RawValue","path":"\/documentation\/semver\/version\/formattingoptions\/rawvalue-swift.typealias"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let dropMinorIfZero: Version.FormattingOptions","path":"\/documentation\/semver\/version\/formattingoptions\/dropminorifzero"},{"type":"property","title":"static let dropPatchIfZero: Version.FormattingOptions","path":"\/documentation\/semver\/version\/formattingoptions\/droppatchifzero"},{"type":"property","title":"static var dropTrailingZeros: Version.FormattingOptions","path":"\/documentation\/semver\/version\/formattingoptions\/droptrailingzeros"},{"type":"property","title":"static var fullVersion: Version.FormattingOptions","path":"\/documentation\/semver\/version\/formattingoptions\/fullversion"},{"type":"property","title":"static let includeMetadata: Version.FormattingOptions","path":"\/documentation\/semver\/version\/formattingoptions\/includemetadata"},{"type":"property","title":"static let includePrerelease: Version.FormattingOptions","path":"\/documentation\/semver\/version\/formattingoptions\/includeprerelease"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/semver\/version\/formattingoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/semver\/version\/formattingoptions\/equatable-implementations"},{"type":"symbol","title":"OptionSet Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init()","path":"\/documentation\/semver\/version\/formattingoptions\/init()"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func contains(Self) -> Bool","path":"\/documentation\/semver\/version\/formattingoptions\/contains(_:)"},{"type":"method","title":"func formIntersection(Self)","path":"\/documentation\/semver\/version\/formattingoptions\/formintersection(_:)"},{"type":"method","title":"func formSymmetricDifference(Self)","path":"\/documentation\/semver\/version\/formattingoptions\/formsymmetricdifference(_:)"},{"type":"method","title":"func formUnion(Self)","path":"\/documentation\/semver\/version\/formattingoptions\/formunion(_:)"},{"type":"method","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","path":"\/documentation\/semver\/version\/formattingoptions\/insert(_:)"},{"type":"method","title":"func intersection(Self) -> Self","path":"\/documentation\/semver\/version\/formattingoptions\/intersection(_:)"},{"type":"method","title":"func remove(Self.Element) -> Self.Element?","path":"\/documentation\/semver\/version\/formattingoptions\/remove(_:)"},{"type":"method","title":"func symmetricDifference(Self) -> Self","path":"\/documentation\/semver\/version\/formattingoptions\/symmetricdifference(_:)"},{"type":"method","title":"func union(Self) -> Self","path":"\/documentation\/semver\/version\/formattingoptions\/union(_:)"},{"type":"method","title":"func update(with: Self.Element) -> Self.Element?","path":"\/documentation\/semver\/version\/formattingoptions\/update(with:)"}],"path":"\/documentation\/semver\/version\/formattingoptions\/optionset-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/semver\/version\/formattingoptions\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/semver\/version\/formattingoptions\/hash(into:)"}],"path":"\/documentation\/semver\/version\/formattingoptions\/rawrepresentable-implementations"},{"type":"symbol","title":"SetAlgebra Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init<S>(S)","path":"\/documentation\/semver\/version\/formattingoptions\/init(_:)","type":"init"},{"title":"init(arrayLiteral: Self.Element...)","path":"\/documentation\/semver\/version\/formattingoptions\/init(arrayliteral:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var isEmpty: Bool","path":"\/documentation\/semver\/version\/formattingoptions\/isempty","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func isDisjoint(with: Self) -> Bool","path":"\/documentation\/semver\/version\/formattingoptions\/isdisjoint(with:)","type":"method"},{"title":"func isStrictSubset(of: Self) -> Bool","path":"\/documentation\/semver\/version\/formattingoptions\/isstrictsubset(of:)","type":"method"},{"title":"func isStrictSuperset(of: Self) -> Bool","path":"\/documentation\/semver\/version\/formattingoptions\/isstrictsuperset(of:)","type":"method"},{"title":"func isSubset(of: Self) -> Bool","path":"\/documentation\/semver\/version\/formattingoptions\/issubset(of:)","type":"method"},{"title":"func isSuperset(of: Self) -> Bool","path":"\/documentation\/semver\/version\/formattingoptions\/issuperset(of:)","type":"method"},{"title":"func subtract(Self)","path":"\/documentation\/semver\/version\/formattingoptions\/subtract(_:)","type":"method"},{"title":"func subtracting(Self) -> Self","path":"\/documentation\/semver\/version\/formattingoptions\/subtracting(_:)","type":"method"}],"path":"\/documentation\/semver\/version\/formattingoptions\/setalgebra-implementations"}],"path":"\/documentation\/semver\/version\/formattingoptions","type":"struct"},{"title":"Version.PrereleaseIdentifier","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func < (Version.PrereleaseIdentifier, Version.PrereleaseIdentifier) -> Bool","path":"\/documentation\/semver\/version\/prereleaseidentifier\/_(_:_:)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"title":"init(String)","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(_:)-11sof","type":"init"},{"title":"init(Int)","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(_:)-2qkfa","type":"init"},{"title":"init(unchecked: some StringProtocol)","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(unchecked:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/semver\/version\/prereleaseidentifier\/debugdescription","type":"property"},{"title":"var description: String","path":"\/documentation\/semver\/version\/prereleaseidentifier\/description","type":"property"},{"title":"var number: Int?","path":"\/documentation\/semver\/version\/prereleaseidentifier\/number","type":"property"},{"title":"var string: String","path":"\/documentation\/semver\/version\/prereleaseidentifier\/string","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func number(Int) -> Version.PrereleaseIdentifier","path":"\/documentation\/semver\/version\/prereleaseidentifier\/number(_:)","type":"method"},{"title":"static func string(some StringProtocol) -> Version.PrereleaseIdentifier","path":"\/documentation\/semver\/version\/prereleaseidentifier\/string(_:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func ... (Self) -> PartialRangeFrom<Self>","path":"\/documentation\/semver\/version\/prereleaseidentifier\/'...(_:)-2ry5w","type":"op"},{"title":"static func ... (Self) -> PartialRangeThrough<Self>","path":"\/documentation\/semver\/version\/prereleaseidentifier\/'...(_:)-8zi3w","type":"op"},{"title":"static func ... (Self, Self) -> ClosedRange<Self>","path":"\/documentation\/semver\/version\/prereleaseidentifier\/'...(_:_:)","type":"op"},{"title":"static func ..< (Self) -> PartialRangeUpTo<Self>","path":"\/documentation\/semver\/version\/prereleaseidentifier\/'.._(_:)","type":"op"},{"title":"static func ..< (Self, Self) -> Range<Self>","path":"\/documentation\/semver\/version\/prereleaseidentifier\/'.._(_:_:)","type":"op"},{"title":"static func > (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/prereleaseidentifier\/_(_:_:)-6vxld","type":"op"},{"title":"static func >= (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/prereleaseidentifier\/_=(_:_:)-1aisw","type":"op"},{"title":"static func <= (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/prereleaseidentifier\/_=(_:_:)-41obm","type":"op"}],"title":"Comparable Implementations","path":"\/documentation\/semver\/version\/prereleaseidentifier\/comparable-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(from:)","type":"init","title":"init(from: any Decoder) throws"}],"title":"Decodable Implementations","path":"\/documentation\/semver\/version\/prereleaseidentifier\/decodable-implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/semver\/version\/prereleaseidentifier\/encode(to:)","type":"method"}],"title":"Encodable Implementations","path":"\/documentation\/semver\/version\/prereleaseidentifier\/encodable-implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/prereleaseidentifier\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/semver\/version\/prereleaseidentifier\/equatable-implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","path":"\/documentation\/semver\/version\/prereleaseidentifier\/expressiblebyextendedgraphemeclusterliteral-implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(integerLiteral: Version.PrereleaseIdentifier.IntegerLiteralType)","type":"init","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(integerliteral:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"Version.PrereleaseIdentifier.IntegerLiteralType","type":"typealias","path":"\/documentation\/semver\/version\/prereleaseidentifier\/integerliteraltype"}],"title":"ExpressibleByIntegerLiteral Implementations","path":"\/documentation\/semver\/version\/prereleaseidentifier\/expressiblebyintegerliteral-implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(extendedgraphemeclusterliteral:)","type":"init"},{"title":"init(stringLiteral: Version.PrereleaseIdentifier.StringLiteralType)","path":"\/documentation\/semver\/version\/prereleaseidentifier\/init(stringliteral:)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"title":"Version.PrereleaseIdentifier.StringLiteralType","path":"\/documentation\/semver\/version\/prereleaseidentifier\/stringliteraltype","type":"typealias"}],"title":"ExpressibleByStringLiteral Implementations","path":"\/documentation\/semver\/version\/prereleaseidentifier\/expressiblebystringliteral-implementations","type":"symbol"}],"path":"\/documentation\/semver\/version\/prereleaseidentifier","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(String)","path":"\/documentation\/semver\/version\/init(_:)","type":"init"},{"title":"init(major: Int, minor: Int, patch: Int, prerelease: Array<Version.PrereleaseIdentifier>, metadata: Array<String>)","path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-3lz2i","type":"init"},{"title":"init(major: Int, minor: Int, patch: Int, prerelease: Version.PrereleaseIdentifier..., metadata: String...)","path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-4mc0k","type":"init"},{"title":"init(major: Int, minor: Int, patch: Int, prerelease: Array<Version.PrereleaseIdentifier>, metadata: String...)","path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-61p2c","type":"init"},{"title":"init(major: Int, minor: Int, patch: Int, prerelease: Version.PrereleaseIdentifier..., metadata: Array<String>)","path":"\/documentation\/semver\/version\/init(major:minor:patch:prerelease:metadata:)-zkae","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/semver\/version\/debugdescription","type":"property"},{"title":"var description: String","path":"\/documentation\/semver\/version\/description","type":"property"},{"title":"var major: Int","path":"\/documentation\/semver\/version\/major","type":"property"},{"title":"var metadata: Array<String>","path":"\/documentation\/semver\/version\/metadata","type":"property"},{"title":"var minor: Int","path":"\/documentation\/semver\/version\/minor","type":"property"},{"title":"var patch: Int","path":"\/documentation\/semver\/version\/patch","type":"property"},{"title":"var prerelease: Array<Version.PrereleaseIdentifier>","path":"\/documentation\/semver\/version\/prerelease","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/semver\/version\/hash(into:)","type":"method"},{"title":"func increase(Version.NumericPart, keepingPrerelease: Bool, keepingMetadata: Bool)","path":"\/documentation\/semver\/version\/increase(_:keepingprerelease:keepingmetadata:)","type":"method"},{"title":"func isIdentical(to: Version, requireIdenticalMetadataOrdering: Bool) -> Bool","path":"\/documentation\/semver\/version\/isidentical(to:requireidenticalmetadataordering:)","type":"method"},{"title":"func next(Version.NumericPart, keepingPrerelease: Bool, keepingMetadata: Bool) -> Version","path":"\/documentation\/semver\/version\/next(_:keepingprerelease:keepingmetadata:)","type":"method"},{"title":"func versionString(formattedWith: Version.FormattingOptions) -> String","path":"\/documentation\/semver\/version\/versionstring(formattedwith:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"Version.DecodingStrategy","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case components(prereleaseAsString: Bool, metadataAsString: Bool)","type":"case","path":"\/documentation\/semver\/version\/decodingstrategy\/components(prereleaseasstring:metadataasstring:)"},{"title":"case custom((any Decoder) throws -> Version)","type":"case","path":"\/documentation\/semver\/version\/decodingstrategy\/custom(_:)"},{"title":"case string","type":"case","path":"\/documentation\/semver\/version\/decodingstrategy\/string"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var components: Version.DecodingStrategy","type":"property","path":"\/documentation\/semver\/version\/decodingstrategy\/components"}],"path":"\/documentation\/semver\/version\/decodingstrategy","type":"enum"},{"title":"Version.EncodingStrategy","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/semver\/version\/encodingstrategy\/components(prereleaseasstring:metadataasstring:)","title":"case components(prereleaseAsString: Bool, metadataAsString: Bool)"},{"type":"case","path":"\/documentation\/semver\/version\/encodingstrategy\/custom(_:)","title":"case custom((Version, any Encoder) throws -> ())"},{"type":"case","path":"\/documentation\/semver\/version\/encodingstrategy\/string(_:)","title":"case string(Version.FormattingOptions)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/semver\/version\/encodingstrategy\/components","title":"static var components: Version.EncodingStrategy"},{"type":"property","path":"\/documentation\/semver\/version\/encodingstrategy\/string","title":"static var string: Version.EncodingStrategy"}],"path":"\/documentation\/semver\/version\/encodingstrategy","type":"enum"},{"title":"Version.NumericPart","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case major","type":"case","path":"\/documentation\/semver\/version\/numericpart\/major"},{"title":"case minor","type":"case","path":"\/documentation\/semver\/version\/numericpart\/minor"},{"title":"case patch","type":"case","path":"\/documentation\/semver\/version\/numericpart\/patch"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","type":"property","path":"\/documentation\/semver\/version\/numericpart\/description"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/semver\/version\/numericpart\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","path":"\/documentation\/semver\/version\/numericpart\/equatable-implementations"}],"path":"\/documentation\/semver\/version\/numericpart","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Comparable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func ... (Self) -> PartialRangeThrough<Self>","path":"\/documentation\/semver\/version\/'...(_:)-3jne3","type":"op"},{"title":"static func ... (Self) -> PartialRangeFrom<Self>","path":"\/documentation\/semver\/version\/'...(_:)-7zfgp","type":"op"},{"title":"static func ... (Self, Self) -> ClosedRange<Self>","path":"\/documentation\/semver\/version\/'...(_:_:)","type":"op"},{"title":"static func ..< (Self) -> PartialRangeUpTo<Self>","path":"\/documentation\/semver\/version\/'.._(_:)","type":"op"},{"title":"static func ..< (Self, Self) -> Range<Self>","path":"\/documentation\/semver\/version\/'.._(_:_:)","type":"op"},{"title":"static func < (Version, Version) -> Bool","path":"\/documentation\/semver\/version\/_(_:_:)","type":"op"},{"title":"static func > (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/_(_:_:)-53xj6","type":"op"},{"title":"static func <= (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/_=(_:_:)-6z215","type":"op"},{"title":"static func >= (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/_=(_:_:)-7km7s","type":"op"}],"path":"\/documentation\/semver\/version\/comparable-implementations","type":"symbol"},{"title":"Decodable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/semver\/version\/init(from:)","type":"init","title":"init(from: any Decoder) throws"}],"path":"\/documentation\/semver\/version\/decodable-implementations","type":"symbol"},{"title":"Encodable Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/semver\/version\/encode(to:)"}],"path":"\/documentation\/semver\/version\/encodable-implementations","type":"symbol"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/semver\/version\/!=(_:_:)"},{"type":"op","title":"static func == (Version, Version) -> Bool","path":"\/documentation\/semver\/version\/==(_:_:)"}],"path":"\/documentation\/semver\/version\/equatable-implementations","type":"symbol"}]},{"type":"groupMarker","title":"Extended Modules"},{"path":"\/documentation\/semver\/foundation","title":"Foundation","type":"extension","children":[{"type":"groupMarker","title":"Extended Structures"},{"path":"\/documentation\/semver\/foundation\/characterset","type":"extension","children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/semver\/foundation\/characterset\/versionsuffixallowed","title":"static let versionSuffixAllowed: CharacterSet","type":"property"}],"title":"CharacterSet"}]},{"path":"\/documentation\/semver\/foundationessentials","title":"FoundationEssentials","type":"extension","children":[{"title":"Extended Classes","type":"groupMarker"},{"path":"\/documentation\/semver\/foundationessentials\/jsondecoder","title":"JSONDecoder","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var semverVersionDecodingStrategy: Version.DecodingStrategy","type":"property","path":"\/documentation\/semver\/foundationessentials\/jsondecoder\/semverversiondecodingstrategy"}],"type":"extension"},{"path":"\/documentation\/semver\/foundationessentials\/jsonencoder","title":"JSONEncoder","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var semverVersionEncodingStrategy: Version.EncodingStrategy","type":"property","path":"\/documentation\/semver\/foundationessentials\/jsonencoder\/semverversionencodingstrategy"}],"type":"extension"},{"path":"\/documentation\/semver\/foundationessentials\/propertylistdecoder","title":"PropertyListDecoder","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/semver\/foundationessentials\/propertylistdecoder\/semverversiondecodingstrategy","title":"var semverVersionDecodingStrategy: Version.DecodingStrategy"}],"type":"extension"},{"path":"\/documentation\/semver\/foundationessentials\/propertylistencoder","title":"PropertyListEncoder","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var semverVersionEncodingStrategy: Version.EncodingStrategy","path":"\/documentation\/semver\/foundationessentials\/propertylistencoder\/semverversionencodingstrategy"}],"type":"extension"}]},{"path":"\/documentation\/semver\/swift","title":"Swift","type":"extension","children":[{"title":"Extended Structures","type":"groupMarker"},{"title":"CodingUserInfoKey","path":"\/documentation\/semver\/swift\/codinguserinfokey","type":"extension","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static let versionDecodingStrategy: CodingUserInfoKey","type":"property","path":"\/documentation\/semver\/swift\/codinguserinfokey\/versiondecodingstrategy"},{"title":"static let versionEncodingStrategy: CodingUserInfoKey","type":"property","path":"\/documentation\/semver\/swift\/codinguserinfokey\/versionencodingstrategy"}]}]}],"title":"SemVer"}]}]},"includedArchiveIdentifiers":["SemVerMacros","SemVer"],"schemaVersion":{"major":0,"patch":2,"minor":1}}